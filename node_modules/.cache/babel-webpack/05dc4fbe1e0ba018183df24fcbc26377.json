{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../database.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ActorComponent_div_0_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.bYear);\n  }\n}\n\nfunction ActorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"table\", 2);\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Birth Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ActorComponent_div_0_tr_7_Template, 5, 2, \"tr\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.actorsDB);\n  }\n}\n\nexport let ActorComponent = /*#__PURE__*/(() => {\n  class ActorComponent {\n    constructor(dbService) {\n      this.dbService = dbService;\n      this.actorsDB = [];\n      this.section = 1;\n      this.fullName = \"\";\n      this.bYear = 0;\n      this.actorId = \"\";\n    } //Get all Actors\n\n\n    onGetActors() {\n      this.dbService.getActors().subscribe(data => {\n        this.actorsDB = data;\n      });\n    } //Create a new Actor, POST request\n\n\n    onSaveActor() {\n      let obj = {\n        name: this.fullName,\n        bYear: this.bYear\n      };\n      this.dbService.createActor(obj).subscribe(result => {\n        this.onGetActors();\n      });\n    } // Update an Actor\n\n\n    onSelectUpdate(item) {\n      this.fullName = item.name;\n      this.bYear = item.bYear;\n      this.actorId = item._id;\n    }\n\n    onUpdateActor() {\n      let obj = {\n        name: this.fullName,\n        bYear: this.bYear\n      };\n      this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n        this.onGetActors();\n      });\n    } //Delete Actor\n\n\n    onDeleteActor(item) {\n      this.dbService.deleteActor(item._id).subscribe(result => {\n        this.onGetActors();\n      });\n    } // This lifecycle callback function will be invoked with the component get initialized by Angular.\n\n\n    ngOnInit() {\n      this.onGetActors();\n    }\n\n    changeSection(sectionId) {\n      this.section = sectionId;\n      this.resetValues();\n    }\n\n    resetValues() {\n      this.fullName = \"\";\n      this.bYear = 0;\n      this.actorId = \"\";\n    }\n\n  }\n\n  ActorComponent.ɵfac = function ActorComponent_Factory(t) {\n    return new (t || ActorComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService));\n  };\n\n  ActorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActorComponent,\n    selectors: [[\"app-actor\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"section\", 4, \"ngIf\"], [1, \"section\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ActorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ActorComponent_div_0_Template, 8, 1, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.section == 1);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf],\n    styles: [\"\"]\n  });\n  return ActorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}